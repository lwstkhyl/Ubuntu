输入流：从键盘或文件中读取内容到内存中
输出流：从计算机内存中把数据写入到文件/显示器上
重定向：改变数据流原来的默认走向
echo "abc"会在命令行中输出abc
而echo "abc" > 2.txt会把abc输出到2.txt内（覆盖原内容），并且命令行中不会显示abc
echo "abc" >> 2.txt不会覆盖，会在文件原最后一行的下一行接着写abc
>和>>用于重定向流，而且它们之前不非得是echo命令，也可以是任何能在终端上输出内容的命令（如ls等）
ls -l > ls.txt就是把ls -l在终端中输出的内容输出到ls.txt中（若不存在该txt则创建）

管道命令：指令1|指令2|指令3，处理指令1输出的正确输出信息，输入给指令2，再把指令2的输出给指令3
ls -l /显示根目录文件信息    more后面加上文件内容可以让其分屏显示
则ls -l / |more就可以把根目录信息分屏显示

建立链接：ln
linux的链接文件类似于Windows下的快捷方式，分为软链接和硬链接
对于2.txt，在系统中有一块区域存储其中的内容，而打开2.txt就是通过文件名来找到这块存储区域的过程，软链接是建立一个快捷方式指向文件名来访问存储区域，删除这个快捷方式对文件无影响，而删除文件名会使文件被删除；软链接大小与文件大小不同
硬链接就是给一个文件起多个名字，每个文件名都指向这块存储区域，如文件名原为2.txt，给它创建硬链接3.txt和4.txt，此时删除2/3/4.txt中的任意一个对文件都无影响，只有当最后一个文件名被删除时，该文件才被彻底删除；硬链接大小与文件大小相同，当然这个相同指的是查看文件大小时输出相同，该文件仍然只有1份

软链接--快捷方式  硬链接--指针（删除就是删除指针，查看大小就是查看指针指向的内存大小）
ln -s 1.txt s1.txt就是给1.txt创建名为s1.txt的软链接
ln 1.txt h1.txt就是给1.txt创建名为h1.txt的硬链接
cat s1.txt就是打开1.txt  cat h1.txt与cat 1.txt输出相同
修改s1.txt和h1.txt都会改变1.txt的内容；修改1.txt都会改变s1.txt和h1.txt的内容
删除源文件后，软链接不能使用，而硬链接仍可使用

区别：软链接可以跨文件系统，而硬链接不行；软链接可以对一个不存在的文件名进行链接，而硬链接不行；软链接可以对目录（文件夹）进行链接，而硬链接不行


文件搜索：grep和find
grep 'txt' ls.txt就是在ls.txt中搜索所有的‘txt’字符串，输出结果是所有包含txt的行，且txt会标红
grep -i忽略大小写进行搜索
grep -n显示行号
grep -v搜索不包含指定字符串的行（取反）
grep与正则表达式联用：
grep '^w'表示以w开头的词
grep 'q$'表示以q结尾的词
find  ./ -name 1.txt在当前目录下查找名为1.txt的文件（包括目录中的文件夹内）
find ./ -name '*.txt'查找所有后缀为txt的文件，其中*是通配符，代表任意多个字符，类似的还有?代表任意一个字符
find ./ -size +15M查找大于15M的文件  -15M就是小于15M的
find ./ -size +15M -size -30M查找15-30M的文件
find ./ -perm 777查找权限为777的文件或目录

归档和压缩：
压缩-把文件中相同的信息用一个字符代替，使文件占用空间变小
归档-把一些文件放在一起成一个包，不进行压缩操作
tar -cvf 归档文件名 文件1 文件2.../目录（如tar -cvf 2-3.tar 2.txt 3.txt就是把2.txt和3.txt都放到2-3.tar中（其中.tar是归档文件名的固定后缀），并且归档后原文件不消失）
tar -xvf 归档文件名（如tar -xvf 2-3.tar就是把2-3.tar解档，恢复成原来的状态，2-3.tar也不会消失）
tar -zcvf 归档文件名 文件1 文件2.../目录就是同时进行归档和压缩（如tar -zcvf 2-3.tar.gz 2.txt 3.txt，其中.tar.gz是压缩的归档文件后缀）
tar -zxvf 归档文件名 就是同时进行解压缩和解档（如tar -zxcf 2-3.tar.gz）
tar -xvf -C 目录 就是把解档后文件放到指定目录下（如tar -zxvf 2-3.tar.gz -C a就是把2-3.tar.gz解档后的文件放到a文件夹下）
zip -r a.zip a 把a文件夹压缩到a.zip中（若压缩文件则不需加-r，原文件/文件夹也不会消失）
unzip a.zip 把a.zip解压到当前目录下
unzip -d test a.zip 把a.zip解压到test目录中
在这两种压缩方式中，tar.gz压缩后的文件最小，因此tar.gz更常用